version: 0.1
component: build
timeoutInSeconds: 10000
shell: bash
env:
  variables:
    docker_server: nrt.ocir.io
  vaultVariables:
    repository: ocid1.vaultsecret.oc1.ap-tokyo-1.amaaaaaassl65iqa3a6633az4kcvuhacslbefj57tncpysuy5y7ozldwkhyq
  exportedVariables:
    - DOCKER_SERVER
    - REPOSITORY
    - TAG

steps:
  - type: Command
    name: "Export variables"
    command: |
      DOCKER_SERVER=${docker_server}
      REPOSITORY=${repository}
      TAG=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "DOCKER_SERVER:" ${DOCKER_SERVER}
      echo "REPOSITORY:" ${REPOSITORY}
      echo "TAG:" ${TAG}
    onFailure:
      - type: Command
        commnd: |
          echo "Failure successfully handled"
        timeoutInSeconds: 60
  - type: Command
    name: "Build Docker Image(Multi platform)"
    command: |
      docker buildx create --use --name AMD-ARM-build --platform linux/ARM64,linux/amd64
      docker buildx build -t k8s-helidon-app --platform linux/amd64,linux/ARM64 .
    onFailure:
      - type: Command
        command: |
          echo "Failure successfully handled"
        timeoutInSeconds: 60

outputArtifacts:
  - name: k8s-helidon-app-image
    type: DOCKER_IMAGE
    location: k8s-helidon-app
  - name: k8s-helidon-app-manifest
    type: BINARY
    location: kubernetes/app.yaml
  - name: k8s-helidon-app-manifest-ingress
    type: BINARY
    location: kubernetes/ingress.yaml